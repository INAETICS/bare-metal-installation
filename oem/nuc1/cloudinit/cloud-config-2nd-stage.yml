#cloud-config

write_files:
  - path: /etc/exports
    permissions: '0644'
    content: /opt/bundles 172.17.8.0/24(rw,async,no_subtree_check,no_root_squash,fsid=0)

coreos:

  update:
    reboot-strategy: off

  etcd2:
    name: controller
    listen-client-urls: http://0.0.0.0:2379
    listen-peer-urls: http://$public_ipv4:2380
    advertise-client-urls: http://$public_ipv4:2379
    initial-advertise-peer-urls: http://$public_ipv4:2380
    initial-cluster: controller=http://$public_ipv4:2380
    initial-cluster-state: new

  fleet:
    public-ip: $public_ipv4
    etcd_servers: http://172.17.8.20:2379
    metadata: role=etcd

  units:

    - name: "etcd2.service"
      command: start

    - name: "flanneld.service"
      command: start
      drop-ins:
          - name: "50-network-config.conf"
            content: |
              [Service]
              Environment=FLANNELD_IFACE=$public_ipv4
              Environment=FLANNELD_ETCD_ENDPOINTS=http://$public_ipv4:2379
              ExecStartPre=-/usr/bin/docker load -i /opt/images/flannel.tar
              ExecStartPre=/bin/bash -c 'until /usr/bin/etcdctl set /coreos.com/network/config \'{"Network":"10.2.0.0/16","Backend":{"Type":"vxlan"}}\'; do echo "waiting for etcd..."; sleep 1; done'

    - name: "docker.service"
      command: start
                  
    - name: "docker-load.service"
      command: start
      content: |
        [Unit]
        Description=Docker Load Service
        Requires=flanneld.service docker.service
        After=flanneld.service docker.service

        [Service]
        Type=oneshot
        RemainAfterExit=yes
        ExecStart=/opt/bin/load-docker-images.sh
        TimeoutStartSec=0
        Restart=no

    - name: "local-network-setup.service"
      command: start
      runtime: true
      content: |
          [Unit]
          Description=a NAT and DHCP for the local network
          After=network-online.target docker.service docker-load.servivce
          Requires=network-online.target docker.service docker-load.service

          [Service]
          ExecStart=/usr/bin/docker run --net=host -d --cap-add=NET_ADMIN andyshinn/dnsmasq -R -p 0 -a 172.17.8.20 -F 172.17.8.102,172.17.8.106,12h -G C0:3F:D5:67:02:9F,172.17.8.102,nuc2 -G C0:3F:D5:67:07:76,172.17.8.103,nuc3 -G C0:3F:D5:64:FD:54,172.17.8.104,nuc4 -G C0:3F:D5:67:01:AB,172.17.8.105,nuc5 -G C0:3F:D5:66:D1:85,172.17.8.106,nuc6
          ExecStartPost=/usr/sbin/iptables -A FORWARD -d 172.17.8.20 -m state --state ESTABLISHED,RELATED -j ACCEPT
          ExecStartPost=/usr/sbin/iptables -A FORWARD -s 172.17.8.20 -j ACCEPT
          ExecStartPost=/usr/sbin/iptables -t nat -A POSTROUTING -o eno1 -j MASQUERADE
                                    
    - name: "docker-registry.service"
      command: start
      content: |
        [Unit]
        Description=Docker Registry Service
        After=docker.service docker-load.service
        Requires=docker.service docker-load.service

        [Service]
        ExecStartPre=-/usr/bin/docker kill registry
        ExecStartPre=-/usr/bin/docker rm registry
        ExecStart=/usr/bin/docker run -p 5000:5000 -v /opt/ssl:/ssl -e REGISTRY_HTTP_TLS_CERTIFICATE=/ssl/certs/docker-registry.pem -e REGISTRY_HTTP_TLS_KEY=/ssl/priv/docker-registry-key.pem --name registry registry:2
        ExecStartPost=/usr/bin/sleep 10
        ExecStartPost=/usr/bin/docker push 172.17.8.20:5000/inaetics/node-provisioning
        ExecStartPost=/usr/bin/docker push 172.17.8.20:5000/inaetics/felix-agent
        ExecStartPost=/usr/bin/docker push 172.17.8.20:5000/inaetics/celix-agent

    - name: "kubernetes.service"
      command: start
      content: |
        [Unit]
        Description=Kubernetes service
        Requires=etcd2.service docker-load.service
        After=etcd2.service docker-load.service
        
        [Service]
        ExecStart=/usr/bin/kubelet --api_servers=127.0.0.1:10080 --register-node=false --allow-privileged=true --config=/opt/kubernetes/manifests --hostname-override=$public_ipv4 --logtostderr=true --v=3
        ExecStartPost=/opt/bin/create-k8s-env.sh
        Restart=always
        RestartSec=10
        
    - name: "elk.service"
      # command: start
      content: |
        [Unit]
        Description=ELK service and controller
        Requires=kubernetes.service
        After=kubernetes.service
        Before=inaetics.service
        
        [Service]
        Type=oneshot
        RemainAfterExit=yes
        EnvironmentFile=/etc/kubernetes.env
        ExecStart=/opt/bin/kubectl create -f /opt/kubernetes/inaetics/elk-service.json
        ExecStart=/opt/bin/kubectl create -f /opt/kubernetes/inaetics/elk-controller.json
        ExecStop=/opt/bin/kubectl delete -f /opt/kubernetes/inaetics/elk-controller.json
        ExecStop=/opt/bin/kubectl delete -f /opt/kubernetes/inaetics/elk-service.json

    - name: "inaetics.service"
      command: start
      content: |
        [Unit]
        Description=INAETICS demonstrator Kubernetes services and controllers
        Requires=docker-registry.service kubernetes.service rpc-mountd.service nfsd.service
        After=docker-registry.service kubernetes.service rpc-mountd.service nfsd.service
        
        [Service]
        Type=oneshot
        RemainAfterExit=yes
        EnvironmentFile=/etc/kubernetes.env
        ExecStart=/opt/bin/kubectl create -f /opt/kubernetes/inaetics/ace-provisioning-service.json
        ExecStart=/opt/bin/kubectl create -f /opt/kubernetes/inaetics/inaetics-viewer-service.json
        ExecStart=/opt/bin/kubectl create -f /opt/kubernetes/inaetics/ace-provisioning-controller.json
        ExecStart=/opt/bin/kubectl create -f /opt/kubernetes/inaetics/inaetics-datastore-viewer-controller.json
        ExecStart=/opt/bin/kubectl create -f /opt/kubernetes/inaetics/inaetics-processor-controller.json
        ExecStart=/opt/bin/kubectl create -f /opt/kubernetes/inaetics/inaetics-processor-celix-controller.json
        ExecStart=/opt/bin/kubectl create -f /opt/kubernetes/inaetics/inaetics-producer-controller.json
        ExecStart=/opt/bin/kubectl create -f /opt/kubernetes/inaetics/inaetics-queue-celix-controller.json
        ExecStart=/opt/bin/kubectl create -f /opt/kubernetes/inaetics/inaetics-queue-controller.json
        ExecStop=/opt/bin/kubectl delete -f /opt/kubernetes/inaetics/ace-provisioning-controller.json
        ExecStop=/opt/bin/kubectl delete -f /opt/kubernetes/inaetics/inaetics-datastore-viewer-controller.json
        ExecStop=/opt/bin/kubectl delete -f /opt/kubernetes/inaetics/inaetics-processor-controller.json
        ExecStop=/opt/bin/kubectl delete -f /opt/kubernetes/inaetics/inaetics-processor-celix-controller.json
        ExecStop=/opt/bin/kubectl delete -f /opt/kubernetes/inaetics/inaetics-producer-controller.json
        ExecStop=/opt/bin/kubectl delete -f /opt/kubernetes/inaetics/inaetics-queue-celix-controller.json
        ExecStop=/opt/bin/kubectl delete -f /opt/kubernetes/inaetics/inaetics-queue-controller.json
        ExecStop=/opt/bin/kubectl delete -f /opt/kubernetes/inaetics/ace-provisioning-service.json
        ExecStop=/opt/bin/kubectl delete -f /opt/kubernetes/inaetics/inaetics-viewer-service.json

###EOF###